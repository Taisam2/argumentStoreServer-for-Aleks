openapi: 3.0.1
info:
  title: Argument Store
  description: "The Argument Store application targets to improve political discussions.\
    \ This is achieved via clustered argument collection, as well as user rated arguments.\
    \ The arguments are sorted into topics. The app is going to be distributed via\
    \ Cloud and will be available as a SPA webapp."
  contact:
    email: m.schmid@ajato.ch
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://petstore.swagger.io/v2
paths:
  /argument:
    post:
      tags:
      - argument
      summary: Add an argument
      operationId: add_argument
      requestBody:
        description: Adds an argument to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Argument'
        required: true
      responses:
        "400":
          description: No argument provided
          content: {}
        "405":
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.argument_controller
components:
  schemas:
    Topic:
      type: object
      properties:
        arguments:
          $ref: '#/components/schemas/Argument'
    Argument:
      required:
      - approval
      - author
      - datetime
      - links
      - text
      type: object
      properties:
        datetime:
          type: string
          format: date-time
        text:
          type: string
        author:
          $ref: '#/components/schemas/User'
        approval:
          type: array
          items:
            $ref: '#/components/schemas/Approval'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Links'
    Option:
      type: object
      properties:
        argument:
          $ref: '#/components/schemas/Argument'
    Links:
      type: object
      properties:
        url:
          type: string
          format: uri
        datetime:
          type: string
          format: date-time
        description:
          type: string
    Approval:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        datetime:
          type: string
          format: date-time
        approval_degree:
          maximum: 1
          minimum: 0
          type: number
          format: double
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        birthday:
          type: string
          format: date-time
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

